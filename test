from Modules.f01_file_process import *
from Modules.Aligner import STAR,STAR_Db
from Modules.Trimmomatic import Trimmomatic
from Modules.Samtools import sortBam
from Modules.HTseq import htseq_count
import yaml

#============ parameters ======================
#parameter_file =  sys.argv[1]
parameter_file = '/home/shangzhong/Codes/NewPipeline/Parameters/RNAseq_count.yaml'
with open(parameter_file,'r') as f:
    doc = yaml.load(f)
p = dic2obj(**doc)
#------------- get parameters -----------
file_path = p.RawDataPath
thread = p.thread
# all parameter
ref_fa = p.ref_fa
annotation = p.gff
# trimmomatic parameter
trim = p.trim_reads
trimmomatic = p.trimmomatic_path
trim_batch = p.trim_jobs_per_batch
phred = p.phred
adapter = p.adapter
# star parameter
star_batch = p.star_jobs_per_batch
db_path = p.STAR_index_path
# htseq parameter
htseq_path = p.htseq_path
htseq_anno_source = p.htseq_anno_source
strand = p.strand_specific

id_file = p.id_symbol_convert_file
contact = p.contact

#===============================================================================
#                    Pipeline part
#===============================================================================
#--------------------- 1. read all files ------------------------------------------------
os.chdir(file_path)
fastqFiles = list_fq_files(file_path)
infile,outfile = replace_filename(fastqFiles,'.fq.gz','')


rule trim_reads:
	input:
		fqFile = infile
	output:
		outfile
	run:	
		Trimmomatic(infile,outfile,trimmomatic,3,phred,adapter)